"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/notifications.ts":
/*!******************************!*\
  !*** ./lib/notifications.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NotificationManager: function() { return /* binding */ NotificationManager; }\n/* harmony export */ });\n/* harmony import */ var _storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./storage */ \"(app-pages-browser)/./lib/storage.ts\");\n\nclass NotificationManager {\n    static async requestPermission() {\n        if (!(\"Notification\" in window)) {\n            console.warn(\"Ce navigateur ne supporte pas les notifications\");\n            return false;\n        }\n        if (Notification.permission === \"granted\") {\n            return true;\n        }\n        if (Notification.permission === \"denied\") {\n            return false;\n        }\n        const permission = await Notification.requestPermission();\n        return permission === \"granted\";\n    }\n    static async showChargeReminder() {\n        const hasPermission = await this.requestPermission();\n        if (!hasPermission) return;\n        const settings = _storage__WEBPACK_IMPORTED_MODULE_0__.StorageManager.getSettings();\n        if (!settings.notifications) return;\n        // Vérifier si on a déjà envoyé une notification récemment\n        const lastNotification = _storage__WEBPACK_IMPORTED_MODULE_0__.StorageManager.getLastNotificationTime();\n        const now = Date.now();\n        const timeSinceLastNotification = now - lastNotification;\n        const minInterval = 30 * 60 * 1000; // 30 minutes minimum entre notifications\n        if (timeSinceLastNotification < minInterval) {\n            return;\n        }\n        const notification = new Notification(\"\\uD83D\\uDCA1 Melissa, pense \\xe0 charger !\", {\n            body: \"Il est temps de brancher ton t\\xe9l\\xe9phone pour \\xe9viter la panne de batterie.\",\n            icon: \"/icon-192x192.png\",\n            badge: \"/icon-192x192.png\",\n            tag: \"charge-reminder\",\n            requireInteraction: true\n        });\n        _storage__WEBPACK_IMPORTED_MODULE_0__.StorageManager.setLastNotificationTime(now);\n        notification.onclick = ()=>{\n            window.focus();\n            notification.close();\n        };\n    }\n    static scheduleReminders() {\n        const settings = _storage__WEBPACK_IMPORTED_MODULE_0__.StorageManager.getSettings();\n        if (!settings.notifications) return;\n        // Programmer les rappels toutes les X minutes\n        setInterval(()=>{\n            this.showChargeReminder();\n        }, settings.reminderInterval * 60 * 1000);\n    }\n    static async getBatteryLevel() {\n        try {\n            // @ts-ignore - Battery API n'est pas typée\n            if (\"getBattery\" in navigator) {\n                // @ts-ignore\n                const battery = await navigator.getBattery();\n                return Math.round(battery.level * 100);\n            }\n        } catch (error) {\n            console.warn(\"Impossible d'acc\\xe9der au niveau de batterie:\", error);\n        }\n        return null;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9ub3RpZmljYXRpb25zLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTJDO0FBRXBDLE1BQU1DO0lBQ1gsYUFBYUMsb0JBQXNDO1FBQ2pELElBQUksQ0FBRSxtQkFBa0JDLE1BQUssR0FBSTtZQUMvQkMsUUFBUUMsSUFBSSxDQUFDO1lBQ2IsT0FBTztRQUNUO1FBRUEsSUFBSUMsYUFBYUMsVUFBVSxLQUFLLFdBQVc7WUFDekMsT0FBTztRQUNUO1FBRUEsSUFBSUQsYUFBYUMsVUFBVSxLQUFLLFVBQVU7WUFDeEMsT0FBTztRQUNUO1FBRUEsTUFBTUEsYUFBYSxNQUFNRCxhQUFhSixpQkFBaUI7UUFDdkQsT0FBT0ssZUFBZTtJQUN4QjtJQUVBLGFBQWFDLHFCQUFvQztRQUMvQyxNQUFNQyxnQkFBZ0IsTUFBTSxJQUFJLENBQUNQLGlCQUFpQjtRQUNsRCxJQUFJLENBQUNPLGVBQWU7UUFFcEIsTUFBTUMsV0FBV1Ysb0RBQWNBLENBQUNXLFdBQVc7UUFDM0MsSUFBSSxDQUFDRCxTQUFTRSxhQUFhLEVBQUU7UUFFN0IsMERBQTBEO1FBQzFELE1BQU1DLG1CQUFtQmIsb0RBQWNBLENBQUNjLHVCQUF1QjtRQUMvRCxNQUFNQyxNQUFNQyxLQUFLRCxHQUFHO1FBQ3BCLE1BQU1FLDRCQUE0QkYsTUFBTUY7UUFDeEMsTUFBTUssY0FBYyxLQUFLLEtBQUssTUFBTSx5Q0FBeUM7UUFFN0UsSUFBSUQsNEJBQTRCQyxhQUFhO1lBQzNDO1FBQ0Y7UUFFQSxNQUFNQyxlQUFlLElBQUliLGFBQWEsOENBQWlDO1lBQ3JFYyxNQUFNO1lBQ05DLE1BQU07WUFDTkMsT0FBTztZQUNQQyxLQUFLO1lBQ0xDLG9CQUFvQjtRQUN0QjtRQUVBeEIsb0RBQWNBLENBQUN5Qix1QkFBdUIsQ0FBQ1Y7UUFFdkNJLGFBQWFPLE9BQU8sR0FBRztZQUNyQnZCLE9BQU93QixLQUFLO1lBQ1pSLGFBQWFTLEtBQUs7UUFDcEI7SUFDRjtJQUVBLE9BQU9DLG9CQUEwQjtRQUMvQixNQUFNbkIsV0FBV1Ysb0RBQWNBLENBQUNXLFdBQVc7UUFDM0MsSUFBSSxDQUFDRCxTQUFTRSxhQUFhLEVBQUU7UUFFN0IsOENBQThDO1FBQzlDa0IsWUFBWTtZQUNWLElBQUksQ0FBQ3RCLGtCQUFrQjtRQUN6QixHQUFHRSxTQUFTcUIsZ0JBQWdCLEdBQUcsS0FBSztJQUN0QztJQUVBLGFBQWFDLGtCQUEwQztRQUNyRCxJQUFJO1lBQ0YsMkNBQTJDO1lBQzNDLElBQUksZ0JBQWdCQyxXQUFXO2dCQUM3QixhQUFhO2dCQUNiLE1BQU1DLFVBQVUsTUFBTUQsVUFBVUUsVUFBVTtnQkFDMUMsT0FBT0MsS0FBS0MsS0FBSyxDQUFDSCxRQUFRSSxLQUFLLEdBQUc7WUFDcEM7UUFDRixFQUFFLE9BQU9DLE9BQU87WUFDZG5DLFFBQVFDLElBQUksQ0FBQyxrREFBZ0RrQztRQUMvRDtRQUNBLE9BQU87SUFDVDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2xpYi9ub3RpZmljYXRpb25zLnRzPzE2YWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3RvcmFnZU1hbmFnZXIgfSBmcm9tICcuL3N0b3JhZ2UnO1xyXG5cclxuZXhwb3J0IGNsYXNzIE5vdGlmaWNhdGlvbk1hbmFnZXIge1xyXG4gIHN0YXRpYyBhc3luYyByZXF1ZXN0UGVybWlzc2lvbigpOiBQcm9taXNlPGJvb2xlYW4+IHtcclxuICAgIGlmICghKCdOb3RpZmljYXRpb24nIGluIHdpbmRvdykpIHtcclxuICAgICAgY29uc29sZS53YXJuKCdDZSBuYXZpZ2F0ZXVyIG5lIHN1cHBvcnRlIHBhcyBsZXMgbm90aWZpY2F0aW9ucycpO1xyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKE5vdGlmaWNhdGlvbi5wZXJtaXNzaW9uID09PSAnZ3JhbnRlZCcpIHtcclxuICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKE5vdGlmaWNhdGlvbi5wZXJtaXNzaW9uID09PSAnZGVuaWVkJykge1xyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgcGVybWlzc2lvbiA9IGF3YWl0IE5vdGlmaWNhdGlvbi5yZXF1ZXN0UGVybWlzc2lvbigpO1xyXG4gICAgcmV0dXJuIHBlcm1pc3Npb24gPT09ICdncmFudGVkJztcclxuICB9XHJcblxyXG4gIHN0YXRpYyBhc3luYyBzaG93Q2hhcmdlUmVtaW5kZXIoKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICBjb25zdCBoYXNQZXJtaXNzaW9uID0gYXdhaXQgdGhpcy5yZXF1ZXN0UGVybWlzc2lvbigpO1xyXG4gICAgaWYgKCFoYXNQZXJtaXNzaW9uKSByZXR1cm47XHJcblxyXG4gICAgY29uc3Qgc2V0dGluZ3MgPSBTdG9yYWdlTWFuYWdlci5nZXRTZXR0aW5ncygpO1xyXG4gICAgaWYgKCFzZXR0aW5ncy5ub3RpZmljYXRpb25zKSByZXR1cm47XHJcblxyXG4gICAgLy8gVsOpcmlmaWVyIHNpIG9uIGEgZMOpasOgIGVudm95w6kgdW5lIG5vdGlmaWNhdGlvbiByw6ljZW1tZW50XHJcbiAgICBjb25zdCBsYXN0Tm90aWZpY2F0aW9uID0gU3RvcmFnZU1hbmFnZXIuZ2V0TGFzdE5vdGlmaWNhdGlvblRpbWUoKTtcclxuICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XHJcbiAgICBjb25zdCB0aW1lU2luY2VMYXN0Tm90aWZpY2F0aW9uID0gbm93IC0gbGFzdE5vdGlmaWNhdGlvbjtcclxuICAgIGNvbnN0IG1pbkludGVydmFsID0gMzAgKiA2MCAqIDEwMDA7IC8vIDMwIG1pbnV0ZXMgbWluaW11bSBlbnRyZSBub3RpZmljYXRpb25zXHJcblxyXG4gICAgaWYgKHRpbWVTaW5jZUxhc3ROb3RpZmljYXRpb24gPCBtaW5JbnRlcnZhbCkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3Qgbm90aWZpY2F0aW9uID0gbmV3IE5vdGlmaWNhdGlvbign8J+SoSBNZWxpc3NhLCBwZW5zZSDDoCBjaGFyZ2VyICEnLCB7XHJcbiAgICAgIGJvZHk6ICdJbCBlc3QgdGVtcHMgZGUgYnJhbmNoZXIgdG9uIHTDqWzDqXBob25lIHBvdXIgw6l2aXRlciBsYSBwYW5uZSBkZSBiYXR0ZXJpZS4nLFxyXG4gICAgICBpY29uOiAnL2ljb24tMTkyeDE5Mi5wbmcnLFxyXG4gICAgICBiYWRnZTogJy9pY29uLTE5MngxOTIucG5nJyxcclxuICAgICAgdGFnOiAnY2hhcmdlLXJlbWluZGVyJyxcclxuICAgICAgcmVxdWlyZUludGVyYWN0aW9uOiB0cnVlXHJcbiAgICB9KTtcclxuXHJcbiAgICBTdG9yYWdlTWFuYWdlci5zZXRMYXN0Tm90aWZpY2F0aW9uVGltZShub3cpO1xyXG5cclxuICAgIG5vdGlmaWNhdGlvbi5vbmNsaWNrID0gKCkgPT4ge1xyXG4gICAgICB3aW5kb3cuZm9jdXMoKTtcclxuICAgICAgbm90aWZpY2F0aW9uLmNsb3NlKCk7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIHNjaGVkdWxlUmVtaW5kZXJzKCk6IHZvaWQge1xyXG4gICAgY29uc3Qgc2V0dGluZ3MgPSBTdG9yYWdlTWFuYWdlci5nZXRTZXR0aW5ncygpO1xyXG4gICAgaWYgKCFzZXR0aW5ncy5ub3RpZmljYXRpb25zKSByZXR1cm47XHJcblxyXG4gICAgLy8gUHJvZ3JhbW1lciBsZXMgcmFwcGVscyB0b3V0ZXMgbGVzIFggbWludXRlc1xyXG4gICAgc2V0SW50ZXJ2YWwoKCkgPT4ge1xyXG4gICAgICB0aGlzLnNob3dDaGFyZ2VSZW1pbmRlcigpO1xyXG4gICAgfSwgc2V0dGluZ3MucmVtaW5kZXJJbnRlcnZhbCAqIDYwICogMTAwMCk7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgYXN5bmMgZ2V0QmF0dGVyeUxldmVsKCk6IFByb21pc2U8bnVtYmVyIHwgbnVsbD4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgLy8gQHRzLWlnbm9yZSAtIEJhdHRlcnkgQVBJIG4nZXN0IHBhcyB0eXDDqWVcclxuICAgICAgaWYgKCdnZXRCYXR0ZXJ5JyBpbiBuYXZpZ2F0b3IpIHtcclxuICAgICAgICAvLyBAdHMtaWdub3JlXHJcbiAgICAgICAgY29uc3QgYmF0dGVyeSA9IGF3YWl0IG5hdmlnYXRvci5nZXRCYXR0ZXJ5KCk7XHJcbiAgICAgICAgcmV0dXJuIE1hdGgucm91bmQoYmF0dGVyeS5sZXZlbCAqIDEwMCk7XHJcbiAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUud2FybignSW1wb3NzaWJsZSBkXFwnYWNjw6lkZXIgYXUgbml2ZWF1IGRlIGJhdHRlcmllOicsIGVycm9yKTtcclxuICAgIH1cclxuICAgIHJldHVybiBudWxsO1xyXG4gIH1cclxufVxyXG4gICAgICAgIl0sIm5hbWVzIjpbIlN0b3JhZ2VNYW5hZ2VyIiwiTm90aWZpY2F0aW9uTWFuYWdlciIsInJlcXVlc3RQZXJtaXNzaW9uIiwid2luZG93IiwiY29uc29sZSIsIndhcm4iLCJOb3RpZmljYXRpb24iLCJwZXJtaXNzaW9uIiwic2hvd0NoYXJnZVJlbWluZGVyIiwiaGFzUGVybWlzc2lvbiIsInNldHRpbmdzIiwiZ2V0U2V0dGluZ3MiLCJub3RpZmljYXRpb25zIiwibGFzdE5vdGlmaWNhdGlvbiIsImdldExhc3ROb3RpZmljYXRpb25UaW1lIiwibm93IiwiRGF0ZSIsInRpbWVTaW5jZUxhc3ROb3RpZmljYXRpb24iLCJtaW5JbnRlcnZhbCIsIm5vdGlmaWNhdGlvbiIsImJvZHkiLCJpY29uIiwiYmFkZ2UiLCJ0YWciLCJyZXF1aXJlSW50ZXJhY3Rpb24iLCJzZXRMYXN0Tm90aWZpY2F0aW9uVGltZSIsIm9uY2xpY2siLCJmb2N1cyIsImNsb3NlIiwic2NoZWR1bGVSZW1pbmRlcnMiLCJzZXRJbnRlcnZhbCIsInJlbWluZGVySW50ZXJ2YWwiLCJnZXRCYXR0ZXJ5TGV2ZWwiLCJuYXZpZ2F0b3IiLCJiYXR0ZXJ5IiwiZ2V0QmF0dGVyeSIsIk1hdGgiLCJyb3VuZCIsImxldmVsIiwiZXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/notifications.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/storage.ts":
/*!************************!*\
  !*** ./lib/storage.ts ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StorageManager: function() { return /* binding */ StorageManager; }\n/* harmony export */ });\nconst STORAGE_KEYS = {\n    CHARGE_HISTORY: \"charge-history\",\n    SETTINGS: \"app-settings\",\n    LAST_NOTIFICATION: \"last-notification\"\n};\nclass StorageManager {\n    static getChargeHistory() {\n        if (false) {}\n        try {\n            const history = localStorage.getItem(STORAGE_KEYS.CHARGE_HISTORY);\n            return history ? JSON.parse(history) : [];\n        } catch (e) {\n            return [];\n        }\n    }\n    static addChargeRecord(batteryLevel) {\n        const now = new Date();\n        const record = {\n            id: crypto.randomUUID(),\n            date: now.toISOString().split(\"T\")[0],\n            time: now.toLocaleTimeString(\"fr-FR\", {\n                hour: \"2-digit\",\n                minute: \"2-digit\"\n            }),\n            timestamp: now.getTime(),\n            batteryLevel\n        };\n        const history = this.getChargeHistory();\n        history.unshift(record); // Ajouter au début\n        // Garder seulement les 100 derniers enregistrements\n        if (history.length > 100) {\n            history.splice(100);\n        }\n        localStorage.setItem(STORAGE_KEYS.CHARGE_HISTORY, JSON.stringify(history));\n        return record;\n    }\n    static getSettings() {\n        if (false) {}\n        try {\n            const settings = localStorage.getItem(STORAGE_KEYS.SETTINGS);\n            return settings ? JSON.parse(settings) : {\n                notifications: true,\n                reminderInterval: 360\n            };\n        } catch (e) {\n            return {\n                notifications: true,\n                reminderInterval: 360\n            };\n        }\n    }\n    static updateSettings(settings) {\n        const current = this.getSettings();\n        const updated = {\n            ...current,\n            ...settings\n        };\n        localStorage.setItem(STORAGE_KEYS.SETTINGS, JSON.stringify(updated));\n    }\n    static getLastNotificationTime() {\n        if (false) {}\n        return parseInt(localStorage.getItem(STORAGE_KEYS.LAST_NOTIFICATION) || \"0\");\n    }\n    static setLastNotificationTime(timestamp) {\n        if (false) {}\n        localStorage.setItem(STORAGE_KEYS.LAST_NOTIFICATION, timestamp.toString());\n    }\n    static clearHistory() {\n        localStorage.removeItem(STORAGE_KEYS.CHARGE_HISTORY);\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9zdG9yYWdlLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFjQSxNQUFNQSxlQUFlO0lBQ25CQyxnQkFBZ0I7SUFDaEJDLFVBQVU7SUFDVkMsbUJBQW1CO0FBQ3JCO0FBRU8sTUFBTUM7SUFDWCxPQUFPQyxtQkFBbUM7UUFDeEMsSUFBSSxLQUFrQixFQUFhLEVBQVU7UUFDN0MsSUFBSTtZQUNGLE1BQU1DLFVBQVVDLGFBQWFDLE9BQU8sQ0FBQ1IsYUFBYUMsY0FBYztZQUNoRSxPQUFPSyxVQUFVRyxLQUFLQyxLQUFLLENBQUNKLFdBQVcsRUFBRTtRQUMzQyxFQUFFLFVBQU07WUFDTixPQUFPLEVBQUU7UUFDWDtJQUNGO0lBRUEsT0FBT0ssZ0JBQWdCQyxZQUFxQixFQUFnQjtRQUMxRCxNQUFNQyxNQUFNLElBQUlDO1FBQ2hCLE1BQU1DLFNBQXVCO1lBQzNCQyxJQUFJQyxPQUFPQyxVQUFVO1lBQ3JCQyxNQUFNTixJQUFJTyxXQUFXLEdBQUdDLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNyQ0MsTUFBTVQsSUFBSVUsa0JBQWtCLENBQUMsU0FBUztnQkFBRUMsTUFBTTtnQkFBV0MsUUFBUTtZQUFVO1lBQzNFQyxXQUFXYixJQUFJYyxPQUFPO1lBQ3RCZjtRQUNGO1FBRUEsTUFBTU4sVUFBVSxJQUFJLENBQUNELGdCQUFnQjtRQUNyQ0MsUUFBUXNCLE9BQU8sQ0FBQ2IsU0FBUyxtQkFBbUI7UUFFNUMsb0RBQW9EO1FBQ3BELElBQUlULFFBQVF1QixNQUFNLEdBQUcsS0FBSztZQUN4QnZCLFFBQVF3QixNQUFNLENBQUM7UUFDakI7UUFFQXZCLGFBQWF3QixPQUFPLENBQUMvQixhQUFhQyxjQUFjLEVBQUVRLEtBQUt1QixTQUFTLENBQUMxQjtRQUNqRSxPQUFPUztJQUNUO0lBRUEsT0FBT2tCLGNBQTJCO1FBQ2hDLElBQUksS0FBa0IsRUFBYSxFQUFzRDtRQUN6RixJQUFJO1lBQ0YsTUFBTUcsV0FBVzdCLGFBQWFDLE9BQU8sQ0FBQ1IsYUFBYUUsUUFBUTtZQUMzRCxPQUFPa0MsV0FBVzNCLEtBQUtDLEtBQUssQ0FBQzBCLFlBQVk7Z0JBQUVGLGVBQWU7Z0JBQU1DLGtCQUFrQjtZQUFJO1FBQ3hGLEVBQUUsVUFBTTtZQUNOLE9BQU87Z0JBQUVELGVBQWU7Z0JBQU1DLGtCQUFrQjtZQUFJO1FBQ3REO0lBQ0Y7SUFFQSxPQUFPRSxlQUFlRCxRQUE4QixFQUFRO1FBQzFELE1BQU1FLFVBQVUsSUFBSSxDQUFDTCxXQUFXO1FBQ2hDLE1BQU1NLFVBQVU7WUFBRSxHQUFHRCxPQUFPO1lBQUUsR0FBR0YsUUFBUTtRQUFDO1FBQzFDN0IsYUFBYXdCLE9BQU8sQ0FBQy9CLGFBQWFFLFFBQVEsRUFBRU8sS0FBS3VCLFNBQVMsQ0FBQ087SUFDN0Q7SUFFQSxPQUFPQywwQkFBa0M7UUFDdkMsSUFBSSxLQUFrQixFQUFhLEVBQVM7UUFDNUMsT0FBT0MsU0FBU2xDLGFBQWFDLE9BQU8sQ0FBQ1IsYUFBYUcsaUJBQWlCLEtBQUs7SUFDMUU7SUFFQSxPQUFPdUMsd0JBQXdCaEIsU0FBaUIsRUFBUTtRQUN0RCxJQUFJLEtBQWtCLEVBQWEsRUFBTztRQUMxQ25CLGFBQWF3QixPQUFPLENBQUMvQixhQUFhRyxpQkFBaUIsRUFBRXVCLFVBQVVpQixRQUFRO0lBQ3pFO0lBRUEsT0FBT0MsZUFBcUI7UUFDMUJyQyxhQUFhc0MsVUFBVSxDQUFDN0MsYUFBYUMsY0FBYztJQUNyRDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2xpYi9zdG9yYWdlLnRzPzVkYzgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGludGVyZmFjZSBDaGFyZ2VSZWNvcmQge1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgZGF0ZTogc3RyaW5nO1xyXG4gIHRpbWU6IHN0cmluZztcclxuICB0aW1lc3RhbXA6IG51bWJlcjtcclxuICBiYXR0ZXJ5TGV2ZWw/OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQXBwU2V0dGluZ3Mge1xyXG4gIG5vdGlmaWNhdGlvbnM6IGJvb2xlYW47XHJcbiAgcmVtaW5kZXJJbnRlcnZhbDogbnVtYmVyOyAvLyBlbiBtaW51dGVzXHJcbiAgbGFzdENoYXJnZWQ/OiBzdHJpbmc7XHJcbn1cclxuXHJcbmNvbnN0IFNUT1JBR0VfS0VZUyA9IHtcclxuICBDSEFSR0VfSElTVE9SWTogJ2NoYXJnZS1oaXN0b3J5JyxcclxuICBTRVRUSU5HUzogJ2FwcC1zZXR0aW5ncycsXHJcbiAgTEFTVF9OT1RJRklDQVRJT046ICdsYXN0LW5vdGlmaWNhdGlvbidcclxufSBhcyBjb25zdDtcclxuXHJcbmV4cG9ydCBjbGFzcyBTdG9yYWdlTWFuYWdlciB7XHJcbiAgc3RhdGljIGdldENoYXJnZUhpc3RvcnkoKTogQ2hhcmdlUmVjb3JkW10ge1xyXG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSByZXR1cm4gW107XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCBoaXN0b3J5ID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oU1RPUkFHRV9LRVlTLkNIQVJHRV9ISVNUT1JZKTtcclxuICAgICAgcmV0dXJuIGhpc3RvcnkgPyBKU09OLnBhcnNlKGhpc3RvcnkpIDogW107XHJcbiAgICB9IGNhdGNoIHtcclxuICAgICAgcmV0dXJuIFtdO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc3RhdGljIGFkZENoYXJnZVJlY29yZChiYXR0ZXJ5TGV2ZWw/OiBudW1iZXIpOiBDaGFyZ2VSZWNvcmQge1xyXG4gICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTtcclxuICAgIGNvbnN0IHJlY29yZDogQ2hhcmdlUmVjb3JkID0ge1xyXG4gICAgICBpZDogY3J5cHRvLnJhbmRvbVVVSUQoKSxcclxuICAgICAgZGF0ZTogbm93LnRvSVNPU3RyaW5nKCkuc3BsaXQoJ1QnKVswXSxcclxuICAgICAgdGltZTogbm93LnRvTG9jYWxlVGltZVN0cmluZygnZnItRlInLCB7IGhvdXI6ICcyLWRpZ2l0JywgbWludXRlOiAnMi1kaWdpdCcgfSksXHJcbiAgICAgIHRpbWVzdGFtcDogbm93LmdldFRpbWUoKSxcclxuICAgICAgYmF0dGVyeUxldmVsXHJcbiAgICB9O1xyXG5cclxuICAgIGNvbnN0IGhpc3RvcnkgPSB0aGlzLmdldENoYXJnZUhpc3RvcnkoKTtcclxuICAgIGhpc3RvcnkudW5zaGlmdChyZWNvcmQpOyAvLyBBam91dGVyIGF1IGTDqWJ1dFxyXG4gICAgXHJcbiAgICAvLyBHYXJkZXIgc2V1bGVtZW50IGxlcyAxMDAgZGVybmllcnMgZW5yZWdpc3RyZW1lbnRzXHJcbiAgICBpZiAoaGlzdG9yeS5sZW5ndGggPiAxMDApIHtcclxuICAgICAgaGlzdG9yeS5zcGxpY2UoMTAwKTtcclxuICAgIH1cclxuXHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShTVE9SQUdFX0tFWVMuQ0hBUkdFX0hJU1RPUlksIEpTT04uc3RyaW5naWZ5KGhpc3RvcnkpKTtcclxuICAgIHJldHVybiByZWNvcmQ7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZ2V0U2V0dGluZ3MoKTogQXBwU2V0dGluZ3Mge1xyXG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSByZXR1cm4geyBub3RpZmljYXRpb25zOiB0cnVlLCByZW1pbmRlckludGVydmFsOiAzNjAgfTtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHNldHRpbmdzID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oU1RPUkFHRV9LRVlTLlNFVFRJTkdTKTtcclxuICAgICAgcmV0dXJuIHNldHRpbmdzID8gSlNPTi5wYXJzZShzZXR0aW5ncykgOiB7IG5vdGlmaWNhdGlvbnM6IHRydWUsIHJlbWluZGVySW50ZXJ2YWw6IDM2MCB9O1xyXG4gICAgfSBjYXRjaCB7XHJcbiAgICAgIHJldHVybiB7IG5vdGlmaWNhdGlvbnM6IHRydWUsIHJlbWluZGVySW50ZXJ2YWw6IDM2MCB9O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc3RhdGljIHVwZGF0ZVNldHRpbmdzKHNldHRpbmdzOiBQYXJ0aWFsPEFwcFNldHRpbmdzPik6IHZvaWQge1xyXG4gICAgY29uc3QgY3VycmVudCA9IHRoaXMuZ2V0U2V0dGluZ3MoKTtcclxuICAgIGNvbnN0IHVwZGF0ZWQgPSB7IC4uLmN1cnJlbnQsIC4uLnNldHRpbmdzIH07XHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShTVE9SQUdFX0tFWVMuU0VUVElOR1MsIEpTT04uc3RyaW5naWZ5KHVwZGF0ZWQpKTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBnZXRMYXN0Tm90aWZpY2F0aW9uVGltZSgpOiBudW1iZXIge1xyXG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSByZXR1cm4gMDtcclxuICAgIHJldHVybiBwYXJzZUludChsb2NhbFN0b3JhZ2UuZ2V0SXRlbShTVE9SQUdFX0tFWVMuTEFTVF9OT1RJRklDQVRJT04pIHx8ICcwJyk7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgc2V0TGFzdE5vdGlmaWNhdGlvblRpbWUodGltZXN0YW1wOiBudW1iZXIpOiB2b2lkIHtcclxuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykgcmV0dXJuO1xyXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oU1RPUkFHRV9LRVlTLkxBU1RfTk9USUZJQ0FUSU9OLCB0aW1lc3RhbXAudG9TdHJpbmcoKSk7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgY2xlYXJIaXN0b3J5KCk6IHZvaWQge1xyXG4gICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oU1RPUkFHRV9LRVlTLkNIQVJHRV9ISVNUT1JZKTtcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbIlNUT1JBR0VfS0VZUyIsIkNIQVJHRV9ISVNUT1JZIiwiU0VUVElOR1MiLCJMQVNUX05PVElGSUNBVElPTiIsIlN0b3JhZ2VNYW5hZ2VyIiwiZ2V0Q2hhcmdlSGlzdG9yeSIsImhpc3RvcnkiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiSlNPTiIsInBhcnNlIiwiYWRkQ2hhcmdlUmVjb3JkIiwiYmF0dGVyeUxldmVsIiwibm93IiwiRGF0ZSIsInJlY29yZCIsImlkIiwiY3J5cHRvIiwicmFuZG9tVVVJRCIsImRhdGUiLCJ0b0lTT1N0cmluZyIsInNwbGl0IiwidGltZSIsInRvTG9jYWxlVGltZVN0cmluZyIsImhvdXIiLCJtaW51dGUiLCJ0aW1lc3RhbXAiLCJnZXRUaW1lIiwidW5zaGlmdCIsImxlbmd0aCIsInNwbGljZSIsInNldEl0ZW0iLCJzdHJpbmdpZnkiLCJnZXRTZXR0aW5ncyIsIm5vdGlmaWNhdGlvbnMiLCJyZW1pbmRlckludGVydmFsIiwic2V0dGluZ3MiLCJ1cGRhdGVTZXR0aW5ncyIsImN1cnJlbnQiLCJ1cGRhdGVkIiwiZ2V0TGFzdE5vdGlmaWNhdGlvblRpbWUiLCJwYXJzZUludCIsInNldExhc3ROb3RpZmljYXRpb25UaW1lIiwidG9TdHJpbmciLCJjbGVhckhpc3RvcnkiLCJyZW1vdmVJdGVtIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/storage.ts\n"));

/***/ })

});