"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/notifications.ts":
/*!******************************!*\
  !*** ./lib/notifications.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NotificationManager: function() { return /* binding */ NotificationManager; }\n/* harmony export */ });\n/* harmony import */ var _storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./storage */ \"(app-pages-browser)/./lib/storage.ts\");\n\nclass NotificationManager {\n    static async requestPermission() {\n        if (!(\"Notification\" in window)) {\n            console.warn(\"Ce navigateur ne supporte pas les notifications\");\n            return false;\n        }\n        if (Notification.permission === \"granted\") {\n            return true;\n        }\n        if (Notification.permission === \"denied\") {\n            return false;\n        }\n        const permission = await Notification.requestPermission();\n        return permission === \"granted\";\n    }\n    static async showChargeReminder() {\n        const hasPermission = await this.requestPermission();\n        if (!hasPermission) return;\n        const settings = _storage__WEBPACK_IMPORTED_MODULE_0__.StorageManager.getSettings();\n        if (!settings.notifications) return;\n        // Vérifier si on a déjà envoyé une notification récemment\n        const lastNotification = _storage__WEBPACK_IMPORTED_MODULE_0__.StorageManager.getLastNotificationTime();\n        const now = Date.now();\n        const timeSinceLastNotification = now - lastNotification;\n        const minInterval = 30 * 60 * 1000; // 30 minutes minimum entre notifications\n        if (timeSinceLastNotification < minInterval) {\n            return;\n        }\n        const notification = new Notification(\"\\uD83D\\uDCA1 Melissa, pense \\xe0 charger !\", {\n            body: \"Il est temps de brancher ton t\\xe9l\\xe9phone pour \\xe9viter la panne de batterie.\",\n            icon: \"/icon-192x192.png\",\n            badge: \"/icon-192x192.png\",\n            tag: \"charge-reminder\",\n            requireInteraction: true\n        });\n        _storage__WEBPACK_IMPORTED_MODULE_0__.StorageManager.setLastNotificationTime(now);\n        notification.onclick = ()=>{\n            window.focus();\n            notification.close();\n        };\n    }\n    static scheduleReminders() {\n        const settings = _storage__WEBPACK_IMPORTED_MODULE_0__.StorageManager.getSettings();\n        if (!settings.notifications) return;\n        // Programmer les rappels toutes les X minutes\n        setInterval(()=>{\n            this.showChargeReminder();\n        }, settings.reminderInterval * 60 * 1000);\n    }\n    static async getBatteryLevel() {\n        // D'abord essayer de récupérer depuis le cache\n        const cachedLevel = _storage__WEBPACK_IMPORTED_MODULE_0__.StorageManager.getCurrentBatteryLevel();\n        if (cachedLevel !== null) {\n            return cachedLevel;\n        }\n        // Sinon essayer l'API Battery (si disponible)\n        try {\n            // @ts-ignore - Battery API n'est pas typée\n            if (\"getBattery\" in navigator) {\n                // @ts-ignore\n                const battery = await navigator.getBattery();\n                const level = Math.round(battery.level * 100);\n                _storage__WEBPACK_IMPORTED_MODULE_0__.StorageManager.setCurrentBatteryLevel(level);\n                return level;\n            }\n        } catch (error) {\n            console.warn(\"Impossible d'acc\\xe9der au niveau de batterie:\", error);\n        }\n        // Valeur par défaut si aucune source disponible\n        const defaultLevel = 75;\n        _storage__WEBPACK_IMPORTED_MODULE_0__.StorageManager.setCurrentBatteryLevel(defaultLevel);\n        return defaultLevel;\n    }\n    static simulateBatteryDrain() {\n        const currentLevel = _storage__WEBPACK_IMPORTED_MODULE_0__.StorageManager.getCurrentBatteryLevel();\n        if (currentLevel !== null && currentLevel > 0) {\n            // Simuler une petite baisse (0.5% à 2% toutes les minutes)\n            const drain = Math.random() * 1.5 + 0.5;\n            const newLevel = Math.max(0, currentLevel - drain);\n            _storage__WEBPACK_IMPORTED_MODULE_0__.StorageManager.setCurrentBatteryLevel(Math.round(newLevel));\n        }\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/notifications.ts\n"));

/***/ })

});